{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions/alretmessage.action.ts","webpack:///./src/app/actions/chatmessage.actions.ts","webpack:///./src/app/actions/chatuser.actions.ts","webpack:///./src/app/actions/game.actions.ts","webpack:///./src/app/actions/gamemove.actions.ts","webpack:///./src/app/actions/invite.actions.ts","webpack:///./src/app/actions/invitingplayer.action.ts","webpack:///./src/app/actions/player.actions.ts","webpack:///./src/app/actions/title.actions.ts","webpack:///./src/app/actions/user.actions.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/account/account.component.html","webpack:///./src/app/components/account/account.component.ts","webpack:///./src/app/components/account/profile.component.html","webpack:///./src/app/components/account/profile.component.ts","webpack:///./src/app/components/xogame/xoroom.component.css","webpack:///./src/app/components/xogame/xoroom.component.html","webpack:///./src/app/components/xogame/xoroom.component.ts","webpack:///./src/app/effects/account.effects.ts","webpack:///./src/app/effects/chat.effects.ts","webpack:///./src/app/effects/game.effects.ts","webpack:///./src/app/models/alertmessage.model.ts","webpack:///./src/app/models/chatmessage.model.ts","webpack:///./src/app/models/chatuser.model.ts","webpack:///./src/app/models/game.model.ts","webpack:///./src/app/models/gamemove.model.ts","webpack:///./src/app/models/invite.model.ts","webpack:///./src/app/models/invitingplayer.model.ts","webpack:///./src/app/models/player.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/reducers/alertmessage.reducer.ts","webpack:///./src/app/reducers/chatmessage.reducer.ts","webpack:///./src/app/reducers/chatmessages.reducer.ts","webpack:///./src/app/reducers/chatuser.reducer.ts","webpack:///./src/app/reducers/chatusers.reducer.ts","webpack:///./src/app/reducers/game.reducer.ts","webpack:///./src/app/reducers/gamemove.reducer.ts","webpack:///./src/app/reducers/invitingplayer.reducer.ts","webpack:///./src/app/reducers/player.reducer.ts","webpack:///./src/app/reducers/reducers.ts","webpack:///./src/app/reducers/title.reducer.ts","webpack:///./src/app/reducers/user.reducer.ts","webpack:///./src/app/resolvers/user.resolver.ts","webpack:///./src/app/services/account.service.ts","webpack:///./src/app/services/signalr.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;ACTO,IAAM,gBAAgB,GAAG,sBAAsB,CAAC;AAChD,IAAM,UAAU,GAAG,4BAA4B,CAAC;AAEvD;IAGE,gCAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAF/B,SAAI,GAAG,gBAAgB,CAAC;IAEU,CAAC;IAC9C,6BAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbM,IAAM,cAAc,GAAG,mBAAmB,CAAC;AAC3C,IAAM,eAAe,GAAG,qBAAqB,CAAC;AAC9C,IAAM,eAAe,GAAG,oBAAoB,CAAC;AAC7C,IAAM,gBAAgB,GAAG,oBAAoB,CAAC;AAC9C,IAAM,mBAAmB,GAAG,wBAAwB,CAAC;AACrD,IAAM,sBAAsB,GAAG,2BAA2B,CAAC;AAElE;IAGI,8BAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAF9B,SAAI,GAAG,cAAc,CAAC;IAEW,CAAC;IAC/C,2BAAC;AAAD,CAAC;;AAED;IAGE,+BAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAF9B,SAAI,GAAG,eAAe,CAAC;IAEU,CAAC;IAC7C,4BAAC;AAAD,CAAC;;AAED;IAGI,+BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,eAAe,CAAC;IAEG,CAAC;IACxC,4BAAC;AAAD,CAAC;;AAED;IAGI,+BAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAF9B,SAAI,GAAG,gBAAgB,CAAC;IAES,CAAC;IAC/C,4BAAC;AAAD,CAAC;;AAED;IAGE,mCAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAF9B,SAAI,GAAG,mBAAmB,CAAC;IAEM,CAAC;IAC7C,gCAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,sBAAsB,CAAC;IAEJ,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACzCM,IAAM,YAAY,GAAG,iBAAiB,CAAC;AACvC,IAAO,cAAc,GAAG,mBAAmB,CAAC;AAC5C,IAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,IAAM,UAAU,GAAG,wBAAwB,CAAC;AAEnD;IAGE,4BAAmB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;QAF3B,SAAI,GAAG,YAAY,CAAC;IAEU,CAAC;IAC1C,yBAAC;AAAD,CAAC;;AAED;IAGE,8BAAmB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;QAF3B,SAAI,GAAG,cAAc,CAAC;IAEQ,CAAC;IAC1C,2BAAC;AAAD,CAAC;;AAED;IAGE,2BAAmB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;QAF3B,SAAI,GAAG,WAAW,CAAC;IAEW,CAAC;IAC1C,wBAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AC3BM,IAAM,gBAAgB,GAAG,sBAAsB,CAAC;AAChD,IAAM,SAAS,GAAG,cAAc,CAAC;AACjC,IAAM,UAAU,GAAG,oBAAoB,CAAC;AAE/C;IAGE,gCAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,gBAAgB,CAAC;IAEE,CAAC;IACtC,6BAAC;AAAD,CAAC;;AAED;IAGE,yBAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,SAAS,CAAC;IAES,CAAC;IACtC,sBAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACpBM,IAAM,YAAY,GAAG,iBAAiB,CAAC;AACvC,IAAM,YAAY,GAAG,iBAAiB,CAAC;AAE9C;IAGE,4BAAmB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;QAF3B,SAAI,GAAG,YAAY,CAAC;IAEU,CAAC;IAC1C,yBAAC;AAAD,CAAC;;AAED;IAGE,4BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,YAAY,CAAC;IAEM,CAAC;IACtC,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACbM,IAAM,UAAU,GAAG,iBAAiB,CAAC;AACrC,IAAM,WAAW,GAAG,kBAAkB,CAAC;AACvC,IAAM,UAAU,GAAG,sBAAsB,CAAC;AAEjD;IAGE,0BAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAFzB,SAAI,GAAG,UAAU,CAAC;IAEU,CAAC;IACxC,uBAAC;AAAD,CAAC;;AAED;IAGE,2BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,WAAW,CAAC;IAEO,CAAC;IACtC,wBAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBM,IAAM,aAAa,GAAG,iCAAiC,CAAC;AACxD,IAAM,aAAa,GAAG,iCAAiC,CAAC;AACxD,IAAM,cAAc,GAAG,kCAAkC,CAAC;AAC1D,IAAM,YAAY,GAAG,gCAAgC,CAAC;AACtD,IAAM,cAAc,GAAG,kCAAkC,CAAC;AAC1D,IAAM,UAAU,GAAG,8BAA8B,CAAC;AAClD,IAAM,aAAa,GAAG,kCAAkC,CAAC;AAEhE;IAGE,6BAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,aAAa,CAAC;IAEe,CAAC;IAChD,0BAAC;AAAD,CAAC;;AAED;IAGE,6BAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,aAAa,CAAC;IAEe,CAAC;IAChD,0BAAC;AAAD,CAAC;;AAED;IAGE,8BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,cAAc,CAAC;IAEI,CAAC;IACtC,2BAAC;AAAD,CAAC;;AAED;IAGE,4BAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,YAAY,CAAC;IAEgB,CAAC;IAChD,yBAAC;AAAD,CAAC;;AAED;IAGE,8BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,cAAc,CAAC;IAEI,CAAC;IACtC,2BAAC;AAAD,CAAC;;AAED;IAGE,6BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,aAAa,CAAC;IAEK,CAAC;IACtC,0BAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;AChDM,IAAM,iBAAiB,GAAG,uBAAuB,CAAC;AAClD,IAAM,kBAAkB,GAAG,uBAAuB,CAAC;AAE1D;IAGE,iCAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAFzB,SAAI,GAAG,iBAAiB,CAAC;IAEG,CAAC;IACxC,8BAAC;AAAD,CAAC;;AAED;IAGE,kCAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,kBAAkB,CAAC;IAEA,CAAC;IACtC,+BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACdM,IAAM,QAAQ,GAAG,aAAa,CAAC;AAC/B,IAAM,QAAQ,GAAG,aAAa,CAAC;AAEtC;IAGE,wBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAFzB,SAAI,GAAG,QAAQ,CAAC;IAEY,CAAC;IACxC,qBAAC;AAAD,CAAC;;AAED;IAGE,wBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAFzB,SAAI,GAAG,QAAQ,CAAC;IAEY,CAAC;IACxC,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM,IAAM,UAAU,GAAG,eAAe,CAAC;AACnC,IAAM,UAAU,GAAG,eAAe,CAAC;AACnC,IAAM,SAAS,GAAG,cAAc,CAAC;AACjC,IAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,IAAM,eAAe,GAAG,wBAAwB,CAAC;AACjD,IAAM,cAAc,GAAG,eAAe,CAAC;AACvC,IAAM,gBAAgB,GAAG,iBAAiB,CAAC;AAC3C,IAAM,iBAAiB,GAAG,kBAAkB,CAAC;AAC7C,IAAM,mBAAmB,GAAG,oBAAoB,CAAC;AAGxD;IAGE,8BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,cAAc,CAAC;IAEI,CAAC;IACtC,2BAAC;AAAD,CAAC;;AAED;IAGE,gCAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,gBAAgB,CAAC;IAEE,CAAC;IACtC,6BAAC;AAAD,CAAC;;AAED;IAGE,iCAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,iBAAiB,CAAC;IAEC,CAAC;IACtC,8BAAC;AAAD,CAAC;;AAED;IAGE,mCAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,mBAAmB,CAAC;IAED,CAAC;IACtC,gCAAC;AAAD,CAAC;;AAED;IAGI,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACxC,uBAAC;AAAD,CAAC;;AAED;IAGI,0BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,UAAU,CAAC;IAEQ,CAAC;IACxC,uBAAC;AAAD,CAAC;;AAED;IAGI,yBAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,SAAS,CAAC;IAES,CAAC;IACxC,sBAAC;AAAD,CAAC;;AAED;IAGI,2BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,WAAW,CAAC;IAEO,CAAC;IACxC,wBAAC;AAAD,CAAC;;AAED;IAGE,+BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QAFvB,SAAI,GAAG,eAAe,CAAC;IAEG,CAAC;IACtC,4BAAC;AAAD,CAAC;;;;;;;;;;;;;AClED,6GAA6G,UAAU,0D;;;;;;;;;;;;;;;;;;;;;;;;;;ACArE;AACd;AAGoB;AAOxD;IAIA,sBAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;IAAG,CAAC;IAE5C,+BAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAA2B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,CAAC;IATU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;yCAMyB,iDAAK;OAJnB,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACC;AACa;AACV;AACC;AACU;AAET;AAEA;AAC2B;AACH;AACG;AAEd;AACA;AAED;AACN;AACA;AAEI;AAIzD,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAgB,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,sEAAY,EAAE,EAAE;IACrF,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,oFAAe,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,sEAAY,EAAE,EAAE;CAC1F,CAAC;AA6BF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA3BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sFAAgB;gBAChB,oFAAe;gBACf,uFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,uDAAW,CAAC,OAAO,CAAC,2DAAQ,CAAC;gBAC7B,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,0DAAW;gBACX,2DAAa,CAAC,OAAO,CAAC;oBACpB,wEAAc;oBACd,kEAAW;oBACX,kEAAW;iBACZ,CAAC;gBACF,qEAAgB;aAEjB;YACD,SAAS,EAAE;gBACT,yEAAc;gBACd,yEAAc;gBACd,sEAAY;aACb;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1DtB,mPAAmP,gBAAgB,6YAA6Y,sCAAsC,WAAW,6nB;;;;;;;;;;;;;;;;;;;;;;;;;;ACApoB;AACzB;AAGsB;AAQ1D;IAKE,0BAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;IAAG,CAAC;IAE9C,mCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAA4B,EAAE,CAAC,CAAC;QAExD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAbU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;SAExB,CAAC;yCAO2B,iDAAK;OALrB,gBAAgB,CAc5B;IAAD,uBAAC;CAAA;AAd4B;;;;;;;;;;;;ACZ7B,uoCAAuoC,gBAAgB,6DAA6D,YAAY,gEAAgE,eAAe,4DAA4D,WAAW,+E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp0C;AAEd;AACa;AAES;AACT;AAOjD;IAMI,0BAAoB,KAAsB,EAAU,KAAqB;QAArD,UAAK,GAAL,KAAK,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QACvE,IAAI,CAAC,IAAI,GAAG,IAAI,uDAAI,EAAE,CAAC;IACzB,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5C,CAAC;IAtBQ,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;SAE1B,CAAC;yCAQ6B,iDAAK,EAA2B,8DAAc;OANhE,gBAAgB,CAuB1B;IAAD,uBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACb7B,sBAAsB,8BAA8B,mBAAmB,kBAAkB,KAAK,K;;;;;;;;;;;ACA9F,wUAAwU,mLAAmL,0BAA0B,+yBAA+yB,iLAAiL,uBAAuB,ukBAAukB,sBAAsB,mCAAmC,cAAc,uEAAuE,aAAa,+RAA+R,cAAc,0QAA0Q,2aAA2a,4BAA4B,+EAA+E,oBAAoB,+CAA+C,oBAAoB,+CAA+C,oBAAoB,wEAAwE,oBAAoB,+CAA+C,oBAAoB,+CAA+C,oBAAoB,wEAAwE,oBAAoB,+CAA+C,oBAAoB,+CAA+C,oBAAoB,+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlzH;AACxC;AAEV;AAME;AAEO;AACU;AACN;AACR;AACI;AACe;AACJ;AACX;AACJ;AACQ;AACjB;AAET;AASxC;IA2BI,yBAAoB,UAAoC,EAC9C,KAAsB,EACtB,GAAsB,EACtB,KAAqB;QAHX,eAAU,GAAV,UAAU,CAA0B;QAC9C,UAAK,GAAL,KAAK,CAAiB;QACtB,QAAG,GAAH,GAAG,CAAmB;QACtB,UAAK,GAAL,KAAK,CAAgB;QAE7B,IAAI,CAAC,WAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,oBAAoB;IACpB,mCAAS,GAAT;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,0BAA0B;IAC1B,wCAAc,GAAd;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAED,kCAAkC;IAClC,qCAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAwC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACpF,4EAA4E;QAC5E,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,2BAA2B;IAC3B,oCAAU,GAAV,UAAW,QAAgB;QACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAA8B,CAAC,IAAI,2DAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,eAAe;IACf,uCAAa,GAAb;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAyC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,6BAA6B;IAC7B,sCAAY,GAAZ;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iFAAwC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,aAAa;IACb,kCAAQ,GAAR,UAAS,IAAY;QACnB,yDAAyD;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,6EAAkC,CAAC,IAAI,+DAAQ,CACrE,IAAI,CAAC,SAAS,CAAC,EAAE,EACjB,IAAI,CAAC,MAAM,CAAC,EAAE,EACd,IAAI,CACL,CAAC,CAAC,CAAC;QACN,CAAC;IACH,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAmDC;QAlDC,wEAAwE;QACxE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE/C,sBAAsB;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0EAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAErE,oCAAoC;QACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEvD,4CAA4C;QAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACjE,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,wCAAwC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEjD,2DAA2D;QAC3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,wBAAc;YACnF,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,+BAA+B;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;QAEvF,gFAAgF;QAChF,oBAAoB;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,8DAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,IAAI,KAAK,0EAA+B,EAA/C,CAA+C,CAAC,CAAC;aACrG,SAAS,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,IAAI,EAAlB,CAAkB,CAAC,CAAC;QAEvC,mEAAmE;QACnE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,8DAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,IAAI,KAAK,gEAAqB,EAArC,CAAqC,CAAC,CAAC;aAC9F,SAAS,CAAC;YACT,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uEAA4B,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAW,GAAX;QACE,wBAAwB;QACxB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,sBAAsB;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,6EAAmC,EAAE,CAAC,CAAC;QAC/D,uBAAuB;QACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,6EAAmC,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0EAAgC,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,8EAAoC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,+EAAsC,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uEAA4B,EAAE,CAAC,CAAC;IAC1D,CAAC;IAlImB;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAQ,wDAAU;kDAAC;IACX;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,wDAAU;yDAAC;IAzB3C,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCA6BkC,oEAAwB;YACvC,iDAAK;YACP,+DAAiB;YACf,+DAAc;OA9BtB,eAAe,CA2J3B;IAAD,sBAAC;CAAA;AA3J2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BiC;AAC3B;AACS;AAEK;AACO;AACP;AAGhD;IAiBI,wBACY,cAA8B,EAC9B,QAAiB;QAF7B,iBAGI;QAFQ,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAS;QAjB7B,YAAO,GAAuB,IAAI,CAAC,QAAQ;aACtC,MAAM,CAAC,gEAAsB,CAAC;aAC9B,IAAI,CAAC,gEAAS,CAAC;YACZ,YAAI,CAAC,cAAc;iBACd,OAAO,EAAE;iBACT,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,sEAA4B,CAAC,IAAI,CAAC,EAAtC,CAAsC,CAAC,CAAC;QAF9D,CAE8D,CACjE,CAAC,CAAC;QAGP,WAAM,GAAuB,IAAI,CAAC,QAAQ;aACrC,MAAM,CAAC,+DAAqB,CAAC;aAC7B,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAmC,IAAK,YAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC;aACpG,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,WAAI,uEAA6B,EAAE,EAAnC,CAAmC,CAAC,CAAC,EADC,CACD,CACvD,CAAC,CAAC;IAKJ,CAAC;IAlBJ;QADC,4DAAM,EAAE;kCACA,+CAAU;mDAMZ;IAGP;QADC,4DAAM,EAAE;kCACD,+CAAU;kDAIX;IAfE,cAAc;QAD1B,gEAAU,EAAE;yCAmBmB,wEAAc;YACpB,qDAAO;OAnBpB,cAAc,CAqB1B;IAAD,qBAAC;CAAA;AArB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkC;AAC3B;AACS;AAEK;AACc;AACP;AACM;AAI7D;IA0CI,qBACU,cAA8B,EAC9B,QAAiB;QAF3B,iBAGI;QAFM,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAS;QA1C3B,SAAI,GAAuB,IAAI,CAAC,QAAQ;aACrC,MAAM,CAAC,4EAA2B,CAAC;aACnC,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAyC;YACxD,YAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBACvD,MAAM,CAAC,IAAI,kFAAiC,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;QAEL,YAAY;QACZ,8CAA8C;QAC9C,6CAA6C;QAC7C,iEAAiE;QACjE,+DAA+D;QAG/D,iBAAY,GAAuB,IAAI,CAAC,QAAQ;aAC7C,MAAM,CAAC,oEAA0B,CAAC;aAClC,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAwC;YACvD,YAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBAC3D,MAAM,CAAC,IAAI,4EAAkC,EAAE,CAAC;YAClD,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;QAGL,sBAAiB,GAAuB,IAAI,CAAC,QAAQ;aAClD,MAAM,CAAC,uEAA6B,CAAC;aACrC,IAAI,CAAC,0DAAG,CAAC;YACR,KAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,MAAM,CAAC,IAAI,+EAAqC,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC,CAAC;QAGN,YAAO,GAAuB,IAAI,CAAC,QAAQ;aACxC,MAAM,CAAC,qEAA2B,CAAC;aACnC,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAyC;YACxD,YAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBACnD,MAAM,CAAC,IAAI,kFAAiC,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;IAKF,CAAC;IA3CJ;QADC,4DAAM,EAAE;kCACH,+CAAU;6CAMX;IASL;QADC,4DAAM,EAAE;kCACK,+CAAU;qDAMnB;IAGL;QADC,4DAAM,EAAE;kCACU,+CAAU;0DAKvB;IAGN;QADC,4DAAM,EAAE;kCACA,+CAAU;gDAMd;IAxCI,WAAW;QADvB,gEAAU,EAAE;yCA4CiB,wEAAc;YACpB,qDAAO;OA5ClB,WAAW,CA8CvB;IAAD,kBAAC;CAAA;AA9CuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqC;AAC3B;AACS;AAEK;AACQ;AACG;AACe;AACX;AAK/D;IAqCE,qBACU,cAA8B,EAC9B,QAAiB;QAF3B,iBAGI;QAFM,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAS;QArC3B,WAAM,GAAuB,IAAI,CAAC,QAAQ;aACzC,MAAM,CAAC,kEAAwB,CAAC;aAChC,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAsC;YACrD,YAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBACtD,MAAM,CAAC,IAAI,yEAA+B,EAAE,CAAC;YAC/C,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;QAGH,kBAAa,GAAuB,IAAI,CAAC,QAAQ;aAChD,MAAM,CAAC,4EAAmC,CAAC;aAC3C,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAiD;YAChE,YAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBACzD,MAAM,CAAC,IAAI,mFAA0C,EAAE,CAAC;YAC1D,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;QAGH,iBAAY,GAAuB,IAAI,CAAC,QAAQ;aAC/C,MAAM,CAAC,2EAAkC,CAAC;aAC1C,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAgD;YAC/D,YAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBACxD,MAAM,CAAC,IAAI,mFAA0C,EAAE,CAAC;YAC1D,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;QAGH,iBAAY,GAAuB,IAAI,CAAC,QAAQ;aAC/C,MAAM,CAAC,sEAA4B,CAAC;aACpC,IAAI,CAAC,gEAAS,CAAC,UAAC,MAA0C;YACzD,YAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC;gBACtD,MAAM,CAAC,IAAI,4EAAkC,EAAE,CAAC;YAClD,CAAC,CAAC,CAAC;QAFH,CAEG,CACJ,CAAC,CAAC;IAKA,CAAC;IAtCJ;QADC,4DAAM,EAAE;kCACD,+CAAU;+CAMf;IAGH;QADC,4DAAM,EAAE;kCACM,+CAAU;sDAMtB;IAGH;QADC,4DAAM,EAAE;kCACK,+CAAU;qDAMrB;IAGH;QADC,4DAAM,EAAE;kCACK,+CAAU;qDAMrB;IAnCQ,WAAW;QADvB,gEAAU,EAAE;yCAuCe,wEAAc;YACpB,qDAAO;OAvChB,WAAW,CAyCvB;IAAD,kBAAC;CAAA;AAzCuB;;;;;;;;;;;;;;ACbxB;AAAA;IAGE,sBAAY,OAAoB;QAApB,sCAAoB;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA;IAKE,qBAAY,IAAiB,EAAE,QAAqB,EAAE,OAAoB;QAA9D,gCAAiB;QAAE,wCAAqB;QAAE,sCAAoB;QACxE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACVD;AAAA;IAKE,kBAAY,EAAe,EAAE,IAAiB,EAAE,QAAqB;QAAzD,4BAAe;QAAE,gCAAiB;QAAE,wCAAqB;QACnE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACVD;AAAA;IAME,cAAY,EAAc,EAAE,QAAqB,EAAE,eAA4B,EAAE,IAAmB;QAAxF,2BAAc;QAAE,wCAAqB;QAAE,sDAA4B;QAAE,gCAAmB;QAClG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACZD;AAAA;IAKE,kBAAY,MAAc,EAAE,QAAgB,EAAE,SAAiB;QAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACVD;AAAA;IAIE,gBAAY,QAAqB,EAAE,QAAqB;QAA5C,wCAAqB;QAAE,wCAAqB;QACtD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACRD;AAAA;IAIE,wBAAY,EAAe,EAAE,QAAqB;QAAtC,4BAAe;QAAE,wCAAqB;QAChD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACRD;AAAA;IAKE,gBAAY,EAAe,EAAE,QAAqB,EAAE,KAAkB;QAA1D,4BAAe;QAAE,wCAAqB;QAAE,kCAAkB;QACpE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACVD;AAAA;IAMI,cAAY,IAAiB,EAAE,OAAoB,EAAE,GAAkB,EAAE,QAAqB;QAAlF,gCAAiB;QAAE,sCAAoB;QAAE,gCAAkB;QAAE,wCAAqB;QAC5F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACZqE;AACV;AAErD,IAAM,YAAY,GAAiB,IAAI,uEAAY,EAAE,CAAC;AAEvD,iBAAkB,KAAoB,EAAE,MAAmC;IAAzD,4CAAoB;IACxC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,6EAAoC;YACvC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,KAAK,uEAA8B;YACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QACzC;YACE,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;ACb4D;AAEvD,iBAAkB,KAAkB,EAAE,MAA0B;IAClE,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,gFAA8B;YACjC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB;YACM,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;ACToE;AAE9D,IAAM,YAAY,GAAkB,EAAE,CAAC;AAExC,iBAAkB,KAAoB,EAAE,MAAkC;IAAxD,4CAAoB;IACxC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,KAAK,6EAAmC;YACxC,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACzC,MAAM,CAAK,QAAQ,SAAE,MAAM,CAAC,OAAO,GAAE;QACvC,KAAK,mFAAyC;YAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QACzC;YACI,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;ACd8D;AAEzD,iBAAkB,KAAe,EAAE,MAA+B;IACtE,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,qEAA2B;YAC9B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB;YACI,MAAM,CAAC,KAAK,CAAC;IACnB,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;;ACT8D;AAExD,IAAM,YAAY,GAAe,EAAE,CAAC;AAErC,iBAAkB,KAAoB,EAAE,MAA+B;IAArD,4CAAoB;IACxC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,KAAK,sEAA4B;YAC/B,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,EAA1B,CAA0B,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAK,KAAK,SAAE,MAAM,CAAC,OAAO,GAAE;YACpC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,KAAK,wEAA8B;YACjC,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5C,IAAM,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,EAA1B,CAA0B,CAAC,CAAC;YACnE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,KAAK,oEAA0B;YAC7B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QACzC;YACI,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;AC5B2C;AACW;AAEhD,IAAM,YAAY,GAAS,IAAI,uDAAI,EAAE,CAAC;AAEvC,iBAAkB,KAAoB,EAAE,MAA2B;IAAjD,4CAAoB;IAC1C,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,sEAA4B;YAC/B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,KAAK,gEAAsB;YACzB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QACzC;YACI,MAAM,CAAC,KAAK,CAAC;IACnB,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;ACb8D;AAEzD,iBAAkB,KAAe,EAAE,MAA+B;IACtE,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,sEAA4B;YAC7B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B;YACI,MAAM,CAAC,KAAK,CAAC;IACnB,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;;;ACVyE;AACV;AAEzD,IAAM,YAAY,GAAmB,IAAI,2EAAc,EAAE,CAAC;AAE3D,iBAAkB,KAAoB,EAAE,MAAqC;IAA3D,4CAAoB;IACxC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,4EAAmC;YACtC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,KAAK,4EAAmC;YACtC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,KAAK,2EAAkC;YACrC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,KAAK,yEAAgC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QACzC;YACE,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;ACjB0D;AAErD,iBAAkB,KAAa,EAAE,MAA6B;IAClE,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,yEAA+B;YAChC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B;YACI,MAAM,CAAC,KAAK,CAAC;IACnB,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACV0C;AACQ;AACM;AACZ;AACQ;AACF;AACY;AACJ;AACZ;AACJ;AACQ;AAE5C,IAAM,QAAQ,GAAG;IACpB,IAAI,EAAE,qDAAgB;IACtB,YAAY,EAAE,6DAAgB;IAC9B,WAAW,EAAE,4DAAuB;IACpC,KAAK,EAAE,sDAAiB;IACxB,SAAS,EAAE,0DAAqB;IAChC,QAAQ,EAAE,yDAAoB;IAC9B,cAAc,EAAE,+DAA0B;IAC1C,YAAY,EAAE,6DAAwB;IACtC,MAAM,EAAE,uDAAkB;IAC1B,IAAI,EAAE,qDAAgB;IACtB,QAAQ,EAAE,0DAAoB;CACjC,CAAC;;;;;;;;;;;;;;;;ACxBsD;AAElD,iBAAkB,KAAa,EAAE,MAA2B;IAC9D,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,+DAAoB;YACvB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,KAAK,+DAAoB;YACvB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB;YACM,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;ACTqD;AAEhD,iBAAkB,KAAW,EAAE,MAA0B;IAC3D,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,KAAK,gEAAqB;YACtB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B,KAAK,+DAAoB;YACrB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B,KAAK,qEAA0B;YAC3B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B,KAAK,oEAAyB;YAC1B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B;YACI,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBmC;AACO;AAIY;AAEJ;AAInD;IACE,sBAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;IAAG,CAAC;IAE9C,8BAAO,GAAP;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAA4B,EAAE,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,6DAAM,CAAC,cAAI,IAAI,QAAC,CAAC,IAAI,EAAN,CAAM,CAAC,EAAE,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAVU,YAAY;QADxB,gEAAU,EAAE;yCAEgB,iDAAK;OADrB,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXkB;AACO;AACN;AAEP;AAErC,oCAAoC;AACpC,IAAM,GAAG,GAAG,eAAe,CAAC;AAG5B;IACI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,gCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAG,CAChC,UAAC,IAAU;YACT,MAAM,CAAC,IAAI,uDAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpE,CAAC,CACF,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV,UAAW,IAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAbQ,cAAc;QAD1B,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AACP;AAE0B;AACP;AACQ;AACW;AACJ;AACX;AACJ;AAES;AAChB;AACJ;AAIgB;AACF;AACN;AAKpD;IAKE,wBAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAClC,CAAC;IAEO,yCAAgB,GAAxB;QACI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC;IAEM,wCAAe,GAAtB,UAAuB,IAAU;QAAjC,iBAUC;QATC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAC,IAAS;YAC5C,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAC3C,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2EAAiC,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;YACrC,UAAU,CAAC;gBACT,YAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAA1B,CAA0B,EAC1B,IAAI,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,uCAAc,GAArB;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,gCAAgC;IACzB,+CAAsB,GAA7B;QACM,sHAAsH;QACtH,wHAAwH;QACxH,8EAA8E;QAC9E,mFAAmF;QACnF,wEAAwE;QAL9E,iBAoDG;QA7CG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,UAAC,IAAY,EAAE,QAAgB,EAAE,OAAe;YAChF,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAiC,CAAC,IAAI,sEAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACzG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,EAAU,EAAE,IAAY,EAAE,QAAgB,EAAE,KAAY;YACpF,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAiC,CAAC,IAAI,sEAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzH,wFAAwF;YACxF,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2EAAiC,CAAC,IAAI,gEAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7E,KAAK,CAAC,OAAO,CAAC,iBAAO;gBACnB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4EAAkC,CAAC,IAAI,gEAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACtH,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,UAAC,EAAU,EAAE,IAAY,EAAE,QAAgB;YAC7E,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAiC,CAAC,IAAI,sEAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YACxH,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4EAAkC,CAAC,IAAI,gEAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,UAAC,EAAU,EAAE,IAAY,EAAE,QAAgB;YAC7E,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,wBAAwB,CAAC,CAAC;YACjD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAiC,CAAC,IAAI,sEAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC3H,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,8EAAoC,CAAC,IAAI,gEAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,UAAC,QAAgB,EAAE,cAAsB;YACjE,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC;YACzC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kFAAyC,CAAC,IAAI,2EAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QACnH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAAe;YACvC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mFAA0C,CAAC,IAAI,wEAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,EAAU,EAAE,QAAgB,EAAE,KAAa;YACzE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,+EAAqC,CAAC,IAAI,4DAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,MAAc,EAAE,UAAkB,EAAE,eAAuB,EAAE,IAAc;YAC1G,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4EAAkC,CAAC,IAAI,wDAAI,CAAC,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACnH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE;YAC3B,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAA2B,EAAE,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACP,CAAC;IAEH,qFAAqF;IAErF,2BAA2B;IACpB,oCAAW,GAAlB,UAAmB,OAAoB;QACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC;aACzF,KAAK,CAAC,UAAC,KAAU;YACd,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;IACf,mCAAU,GAAjB,UAAkB,MAAc;QAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;aACrE,KAAK,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uBAAuB;IAChB,sCAAa,GAApB,UAAqB,cAA8B;QACjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,cAAc,CAAC,EAAE,CAAC;aAC3D,KAAK,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IAChB,qCAAY,GAAnB,UAAoB,cAA8B;QAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,cAAc,CAAC,EAAE,CAAC;aAC1D,KAAK,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;IACC,mCAAU,GAAjB,UAAkB,QAAkB;QAClC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,SAAS,CAAC;aACnG,KAAK,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;IACd,gCAAO,GAAd,UAAe,IAAU;QACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC1D,IAAI,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,0BAA0B,CAAC,CAAC;QACtD,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU;YACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IA1IU,cAAc;QAD1B,gEAAU,EAAE;yCAMgB,iDAAK;OALrB,cAAc,CA2I1B;IAAD,qBAAC;CAAA;AA3I0B;;;;;;;;;;;;;;ACxB3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\r\nimport { AlertMessage } from '../models/alertmessage.model';\r\n\r\nexport const ALERTMESSAGESEND = '[aleertmessage] send';\r\nexport const RESETSTATE = '[alertmessage] reset state';\r\n\r\nexport class AlertMessageSendAction implements Action {\r\n  readonly type = ALERTMESSAGESEND;\r\n\r\n  constructor(public payload: AlertMessage) {}\r\n}\r\n\r\nexport class ResetStateAction implements Action {\r\n  readonly type = RESETSTATE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = AlertMessageSendAction\r\n  | ResetStateAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { ChatMessage } from '../models/chatmessage.model';\r\n\r\nexport const CHATMESSAGEADD = '[chatmessage] add';\r\nexport const CHATMESSAGESEND = '[chatmesssage] send';\r\nexport const CHATMESSAGESENT = '[chatmessage] sent';\r\nexport const CHATMESSAGESPUSH = '[chatmessage] push';\r\nexport const CHATMESSAGERECIEVED = '[chatmessage] recieved';\r\nexport const CHATMESSAGESRESETSTATE = '[chatmessage] reset state';\r\n\r\nexport class ChatMessageAddAction implements Action {\r\n    readonly type = CHATMESSAGEADD;\r\n\r\n    constructor(public payload: ChatMessage) {}\r\n}\r\n\r\nexport class ChatMessageSendAction implements Action {\r\n  readonly type = CHATMESSAGESEND;\r\n\r\n  constructor(public payload: ChatMessage) {}\r\n}\r\n\r\nexport class ChatMessageSentAction implements Action {\r\n    readonly type = CHATMESSAGESENT;\r\n\r\n    constructor(public payload?: any) {}\r\n}\r\n\r\nexport class ChatMessagePushAction implements Action {\r\n    readonly type = CHATMESSAGESPUSH;\r\n\r\n    constructor(public payload: ChatMessage) {}\r\n}\r\n\r\nexport class ChatMessageRecievedAction implements Action {\r\n  readonly type = CHATMESSAGERECIEVED;\r\n\r\n  constructor(public payload: ChatMessage) {}\r\n}\r\n\r\nexport class ResetStateAction implements Action {\r\n  readonly type = CHATMESSAGESRESETSTATE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = ChatMessageAddAction\r\n  | ChatMessageSendAction\r\n  | ChatMessageSentAction\r\n  | ChatMessagePushAction\r\n  | ChatMessageRecievedAction\r\n  | ResetStateAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { ChatUser } from '../models/chatuser.model';\r\n\r\nexport const CHATUSERPUSH = '[chatuser] push';\r\nexport const  CHATUSERREMOVE = '[chatuser] remove';\r\nexport const CHATUSERSET = '[chatuser] set';\r\nexport const RESETSTATE = '[chatuser] reset state';\r\n\r\nexport class ChatUserPushAction implements Action {\r\n  readonly type = CHATUSERPUSH;\r\n\r\n  constructor(public payload: ChatUser) {}\r\n}\r\n\r\nexport class ChatUserRemoveAction implements Action {\r\n  readonly type = CHATUSERREMOVE;\r\n\r\n  constructor(public payload: ChatUser) {}\r\n}\r\n\r\nexport class ChatUserSetAction implements Action {\r\n  readonly type = CHATUSERSET;\r\n\r\n  constructor(public payload: ChatUser) {}\r\n}\r\n\r\nexport class ResetStateAction implements Action {\r\n  readonly type = RESETSTATE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = ChatUserPushAction\r\n  | ChatUserRemoveAction\r\n  | ChatUserSetAction\r\n  | ResetStateAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { Game } from '../models/game.model';\r\n\r\nexport const GAMERECIEVESTATE = '[game] recieve state';\r\nexport const GAMEENDED = '[game] ended';\r\nexport const RESETSTATE = '[game] reset state';\r\n\r\nexport class GameRecieveStateAction implements Action {\r\n  readonly type = GAMERECIEVESTATE;\r\n\r\n  constructor(public payload: Game) {}\r\n}\r\n\r\nexport class GameEndedAction implements Action {\r\n  readonly type = GAMEENDED;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class ResetStateAction implements Action {\r\n  readonly type = RESETSTATE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = GameRecieveStateAction\r\n  | GameEndedAction\r\n  | ResetStateAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { GameMove } from '../models/gamemove.model';\r\n\r\nexport const GAMEMOVESEND = '[gamemove] send';\r\nexport const GAMEMOVESENT = '[gamemove] send';\r\n\r\nexport class GameMoveSendAction implements Action {\r\n  readonly type = GAMEMOVESEND;\r\n\r\n  constructor(public payload: GameMove) {}\r\n}\r\n\r\nexport class GameMoveSentAction implements Action {\r\n  readonly type = GAMEMOVESENT;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = GameMoveSendAction\r\n  | GameMoveSentAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { Invite } from '../models/invite.model';\r\n\r\nexport const GAMEINVITE = '[invite] invite';\r\nexport const GAMEINVITED = '[invite] invited';\r\nexport const RESETSTATE = '[invite] reset state';\r\n\r\nexport class GameInviteAction implements Action {\r\n  readonly type = GAMEINVITE;\r\n\r\n  constructor(public payload: Invite) {}\r\n}\r\n\r\nexport class GameInvitedAction implements Action {\r\n  readonly type = GAMEINVITED;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class ResetStateAction implements Action {\r\n  readonly type = RESETSTATE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = GameInviteAction\r\n  | GameInvitedAction\r\n  | ResetStateAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { InvitingPlayer } from '../models/invitingplayer.model';\r\n\r\nexport const RECIEVEINVITE = '[invitingplayer] recieve invite';\r\nexport const DECLINEINVITE = '[invitingplayer] decline invite';\r\nexport const DECLINEDINVITE = '[invitingplayer] declined invite';\r\nexport const ACCEPTINVITE = '[invitingplayer] accept invite';\r\nexport const ACCEPTEDINVITE = '[invitingplayer] accepted invite';\r\nexport const RESETSTATE = '[invitingplayer] reset state';\r\nexport const CONNECTTOGAME = '[invitingplayer] connect to game';\r\n\r\nexport class RecieveInviteAction implements Action {\r\n  readonly type = RECIEVEINVITE;\r\n\r\n  constructor(public payload: InvitingPlayer) {}\r\n}\r\n\r\nexport class DeclineInviteAction implements Action {\r\n  readonly type = DECLINEINVITE;\r\n\r\n  constructor(public payload: InvitingPlayer) {}\r\n}\r\n\r\nexport class DeclinedInviteAction implements Action {\r\n  readonly type = DECLINEDINVITE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class AcceptInviteAction implements Action {\r\n  readonly type = ACCEPTINVITE;\r\n\r\n  constructor(public payload: InvitingPlayer) {}\r\n}\r\n\r\nexport class AcceptedInviteAction implements Action {\r\n  readonly type = ACCEPTEDINVITE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class ConnectToGameAction implements Action {\r\n  readonly type = CONNECTTOGAME;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class ResetStateAction implements Action {\r\n  readonly type = RESETSTATE;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = RecieveInviteAction\r\n  | DeclineInviteAction\r\n  | DeclinedInviteAction\r\n  | ResetStateAction\r\n  | AcceptInviteAction\r\n  | AcceptedInviteAction\r\n  | ConnectToGameAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { Player } from '../models/player.model';\r\n\r\nexport const PLAYERRECIEVEDATA = '[player] recieve data';\r\nexport const PLAYERDISCONNECTED = '[player] disconnected';\r\n\r\nexport class PlayerRecieveDataAction implements Action {\r\n  readonly type = PLAYERRECIEVEDATA;\r\n\r\n  constructor(public payload: Player) {}\r\n}\r\n\r\nexport class PlayerDisconnectedAction implements Action {\r\n  readonly type = PLAYERDISCONNECTED;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport type Actions = PlayerRecieveDataAction\r\n  | PlayerDisconnectedAction;\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport const TITLESET = '[title] set';\r\nexport const TITLEGET = '[title] get';\r\n\r\nexport class TitleSetAction implements Action {\r\n  readonly type = TITLESET;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class TitleGetAction implements Action {\r\n  readonly type = TITLEGET;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport type Actions = TitleSetAction\r\n  | TitleGetAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { User } from '../models/user.model';\r\n\r\nexport const USERCHANGE = '[user] change';\r\nexport const USERUPDATE = '[user] update';\r\nexport const USERWRITE = '[user] write';\r\nexport const USERCHANGED = '[user] changed';\r\nexport const USERCHATCONNECT = '[user] connect to chat';\r\nexport const USERHUBCONNECT = '[hub] connect';\r\nexport const USERHUBCONNECTED = '[hub] connected';\r\nexport const USERHUBDISCONNECT = '[hub] disconnect';\r\nexport const USERHUBDISCONNECTED = '[hub] disconnected';\r\n\r\n\r\nexport class UserHubConnectAction implements Action {\r\n  readonly type = USERHUBCONNECT;\r\n\r\n  constructor(public payload: User) {}\r\n}\r\n\r\nexport class UserHubConnectedAction implements Action {\r\n  readonly type = USERHUBCONNECTED;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class UserHubDisconnectAction implements Action {\r\n  readonly type = USERHUBDISCONNECT;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class UserHubDisconnectedAction implements Action {\r\n  readonly type = USERHUBDISCONNECTED;\r\n\r\n  constructor(public payload?: any) {}\r\n}\r\n\r\nexport class UserChangeAction implements Action {\r\n    readonly type = USERCHANGE;\r\n\r\n    constructor(public payload: User) {}\r\n}\r\n\r\nexport class UserUpdateAction implements Action {\r\n    readonly type = USERUPDATE;\r\n\r\n    constructor(public payload?: any) {}\r\n}\r\n\r\nexport class UserWriteAction implements Action {\r\n    readonly type = USERWRITE;\r\n\r\n    constructor(public payload: User) {}\r\n}\r\n\r\nexport class UserChangedAction implements Action {\r\n    readonly type = USERCHANGED;\r\n\r\n    constructor(public payload?: any) {}\r\n}\r\n\r\nexport class UserChatConnectAction implements Action {\r\n  readonly type = USERCHATCONNECT;\r\n\r\n  constructor(public payload: User) {}\r\n}\r\n\r\nexport type Actions = UserChangeAction\r\n  | UserUpdateAction\r\n  | UserWriteAction\r\n  | UserChatConnectAction\r\n  | UserHubConnectAction\r\n  | UserHubConnectedAction\r\n  | UserHubDisconnectAction\r\n  | UserHubDisconnectedAction;\r\n","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <app-account></app-account>\\n  <h1>\\n    Welcome to {{ _title }}!\\n  </h1>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './app.state';\nimport { Observable } from 'rxjs';\nimport * as titleActions from './actions/title.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\n\nexport class AppComponent implements OnInit {\n  title: Observable<string>;\n  _title: string;\n\nconstructor(private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this._title = 'Tic-Tac-Toe Game';\n    this.store.dispatch(new titleActions.TitleSetAction(this._title));\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { reducers } from './reducers/reducers';\n\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './components/account/profile.component';\nimport { XORoomComponent } from './components/xogame/xoroom.component';\nimport { AccountComponent } from './components/account/account.component';\n\nimport { AccountService } from './services/account.service';\nimport { SignalRService } from './services/signalr.service';\n\nimport { AccountEffects } from './effects/account.effects';\nimport { ChatEffects } from './effects/chat.effects';\nimport { GameEffects } from './effects/game.effects';\n\nimport { UserResolver } from './resolvers/user.resolver';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nconst appRoutes: Routes = [\n  { path: 'ViewProfile', component: ProfileComponent, resolve: { user: UserResolver } },\n  { path: 'tic-tac-toe-room', component: XORoomComponent, resolve: { user: UserResolver } },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    XORoomComponent,\n    AccountComponent,\n  ],\n  imports: [\n    BrowserModule,\n    StoreModule.forRoot(reducers),\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    EffectsModule.forRoot([\n      AccountEffects,\n      ChatEffects,\n      GameEffects\n    ]),\n    HttpClientModule,\n    // StoreDevtoolsModule.instrument({ maxAge: 10 }),\n  ],\n  providers: [\n    AccountService,\n    SignalRService,\n    UserResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <nav class=\\\"navbar navbar-default navbar-static\\\" id=\\\"navbar\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a routerLink=\\\"\\\" class=\\\"navbar-brand\\\">\\r\\n                {{title$ | async}}\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\\\"collapse navbar-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li id=\\\"account-menu\\\" class=\\\"dropdown\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" id=\\\"drop\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" *ngIf=\\\"user$ | async; let user\\\">\\r\\n                    {{user.name}}\\r\\n                        <span class=\\\"caret\\\"></span>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drop\\\">\\r\\n                        <li>\\r\\n                            <a routerLink=\\\"/ViewProfile\\\">View Profile</a>\\r\\n                        </li>\\r\\n                        <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n                        <li>\\r\\n                            <a href=\\\"/Account/Logout\\\">LogOut</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </nav>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from './../../models/user.model';\r\nimport { AppState } from './../../app.state';\r\nimport * as userActions from '../../actions/user.actions';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html'\r\n})\r\n\r\nexport class AccountComponent implements OnInit {\r\n\r\n  user$: Observable<User>;\r\n  title$: Observable<string>;\r\n\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new userActions.UserUpdateAction());\r\n\r\n    this.user$ = this.store.select('user');\r\n\r\n    this.title$ = this.store.select('title');\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"edit\\\" class=\\\"text-left\\\">\\r\\n    <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"username\\\">Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"surname\\\">Surname</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.surname\\\" name=\\\"surname\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"age\\\">Age</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.age\\\" name=\\\"age\\\">\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!edit\\\" class=\\\"text-left\\\">\\r\\n    <div>\\r\\n        <span>Username: </span> {{user?.username}}\\r\\n    </div>\\r\\n    <div>\\r\\n        <span>Name: </span> {{user?.name}}\\r\\n    </div>\\r\\n    <div>\\r\\n        <span>Surname: </span> {{user?.surname}}\\r\\n    </div>\\r\\n    <div>\\r\\n        <span>Age: </span> {{user?.age}}\\r\\n    </div>\\r\\n    <button (click)=\\\"onEdit()\\\">Edit</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from './../../models/user.model';\r\nimport { AppState } from './../../app.state';\r\nimport * as UserActions from '../../actions/user.actions';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html'\r\n})\r\n\r\nexport class ProfileComponent implements OnInit {\r\n\r\n    edit: boolean;\r\n    user$: Observable<User>;\r\n    user: User;\r\n\r\n    constructor(private store: Store<AppState>, private route: ActivatedRoute) {\r\n      this.user = new User();\r\n    }\r\n\r\n    onSubmit(): void {\r\n      this.store.dispatch(new UserActions.UserChangeAction(this.user));\r\n      this.store.dispatch(new UserActions.UserWriteAction(this.user));\r\n      this.edit = false;\r\n    }\r\n\r\n    onEdit(): void {\r\n      this.edit = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.user = this.route.snapshot.data.user;\r\n    }\r\n  }\r\n","module.exports = \"td {\\r\\n  border: 1px solid black;\\r\\n  height: 50px;\\r\\n  width: 50px;\\r\\n}\\r\\n\"","module.exports = \"<!-- Invite Modal -->\\r\\n<div class=\\\"modal fade\\\" #modal>\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n          <form>\\r\\n              <div class=\\\"modal-header\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n                  <header class=\\\"font-12 bold\\\">Новое приглашение!</header>\\r\\n              </div>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                {{invitingPlayer?.username}} приглашает поиграть!\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"acceptInvite()\\\">Принять</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"declineInvite()\\\">Отказаться</button>\\r\\n              </div>\\r\\n          </form>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Invite Modal -->\\r\\n\\r\\n<!-- Message Modal -->\\r\\n<div class=\\\"modal fade\\\" #messageModal>\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n          <form>\\r\\n              <div class=\\\"modal-header bg-warning\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n                  <header class=\\\"font-12 bold\\\">Новое сообщение!</header>\\r\\n              </div>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                {{alertMessage?.message}}\\r\\n              </div>\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">close</button>\\r\\n              </div>\\r\\n          </form>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Message Modal -->\\r\\n\\r\\n<div class=\\\"chat-container\\\" *ngIf=\\\"!isGame\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"panel panel-default text-left\\\" *ngFor=\\\"let msg of (chatMessages$ | async)\\\">\\r\\n          <div class=\\\"panel-heading\\\">{{msg.name | titlecase}}<span style=\\\"font-size: 12px\\\">@{{msg.username}}</span></div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            {{msg.message}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let usr of (chatUsers$ | async)\\\">\\r\\n            <span class=\\\"fake-link\\\" (click)=\\\"sendInvite(usr.id)\\\">{{usr.username}}</span>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <form class=\\\"form-inline\\\" (ngSubmit)=\\\"sendMessage()\\\">\\r\\n      <div class=\\\"container text-left\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"background:#ddceab;\\\">\\r\\n              <div class=\\\"col-sm py-2\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"message\\\" [(ngModel)]=\\\"chatMessage.message\\\"/>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"game-container text-center\\\" *ngIf=\\\"isGame\\\">\\r\\n  <h1>{{gameState?.currentUsername}} ходит!</h1>\\r\\n  <table>\\r\\n    <tr>\\r\\n        <td (click)=\\\"makeMove(0)\\\">{{gameState?.deck[0]}}</td>\\r\\n        <td (click)=\\\"makeMove(1)\\\">{{gameState?.deck[1]}}</td>\\r\\n        <td (click)=\\\"makeMove(2)\\\">{{gameState?.deck[2]}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td (click)=\\\"makeMove(3)\\\">{{gameState?.deck[3]}}</td>\\r\\n        <td (click)=\\\"makeMove(4)\\\">{{gameState?.deck[4]}}</td>\\r\\n        <td (click)=\\\"makeMove(5)\\\">{{gameState?.deck[5]}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td (click)=\\\"makeMove(6)\\\">{{gameState?.deck[6]}}</td>\\r\\n        <td (click)=\\\"makeMove(7)\\\">{{gameState?.deck[7]}}</td>\\r\\n        <td (click)=\\\"makeMove(8)\\\">{{gameState?.deck[8]}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport { ChatMessage } from './../../models/chatmessage.model';\r\nimport { User } from './../../models/user.model';\r\nimport { Invite } from './../../models/invite.model';\r\nimport { ChatUser } from '../../models/chatuser.model';\r\nimport { AlertMessage } from '../../models/alertmessage.model';\r\nimport { InvitingPlayer } from '../../models/invitingplayer.model';\r\nimport { Player } from '../../models/player.model';\r\nimport { Game } from '../../models/game.model';\r\nimport { GameMove } from '../../models/gamemove.model';\r\nimport { AppState } from './../../app.state';\r\nimport { Store, ReducerManagerDispatcher } from '@ngrx/store';\r\nimport * as ChatMessageActions from '../../actions/chatmessage.actions';\r\nimport * as ChatUserActions from '../../actions/chatuser.actions';\r\nimport * as UserActions from '../../actions/user.actions';\r\nimport * as InviteActions from '../../actions/invite.actions';\r\nimport * as InvitingPlayerActions from '../../actions/invitingplayer.action';\r\nimport * as AlertMessageActions from '../../actions/alretmessage.action';\r\nimport * as PlayerActions from '../../actions/player.actions';\r\nimport * as GameActions from '../../actions/game.actions';\r\nimport * as GameMoveActions from '../../actions/gamemove.actions';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subscription, } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-xoroom',\r\n  templateUrl: './xoroom.component.html',\r\n  styleUrls: [ './xoroom.component.css' ]\r\n})\r\n\r\nexport class XORoomComponent implements OnInit, OnDestroy {\r\n\r\n    isGameSub: Subscription;\r\n    gameEndedSub: Subscription;\r\n    gameStateChangeSub: Subscription;\r\n    chatUserSub: Subscription;\r\n    invitingPlayerSub: Subscription;\r\n    alertMessageSub: Subscription;\r\n    gameStateSub: Subscription;\r\n    playerSub: Subscription;\r\n\r\n    chatMessage: ChatMessage;\r\n    chatUser: ChatUser;\r\n    user: User;\r\n    invitingPlayer: InvitingPlayer;\r\n    alertMessage: AlertMessage;\r\n    player: Player;\r\n    gameState: Game;\r\n    connectToGame: boolean;\r\n    isGame: boolean;\r\n\r\n    chatUsers$: Observable<ChatUser[]>;\r\n    chatMessages$: Observable<ChatMessage[]>;\r\n\r\n    @ViewChild('modal') modal: ElementRef;\r\n    @ViewChild('messageModal') messageModal: ElementRef;\r\n\r\n    constructor(private dispatcher: ReducerManagerDispatcher,\r\n      private store: Store<AppState>,\r\n      private cdr: ChangeDetectorRef,\r\n      private route: ActivatedRoute,\r\n    ) {\r\n      this.chatMessage = new ChatMessage();\r\n      this.isGame = false;\r\n    }\r\n\r\n    // modal приглашения\r\n    showModal() {\r\n      if (this.invitingPlayer != null && this.invitingPlayer.id.length > 0) {\r\n        $(this.modal.nativeElement).modal('show');\r\n      }\r\n    }\r\n\r\n    // modal сообщений сервера\r\n    showAlertModal() {\r\n      if (this.alertMessage != null && this.alertMessage.message.length > 0) {\r\n        $(this.messageModal.nativeElement).modal('show');\r\n      }\r\n    }\r\n\r\n    // Метод отправки сообщения в чате\r\n    sendMessage() {\r\n      this.store.dispatch(new ChatMessageActions.ChatMessageSendAction(this.chatMessage));\r\n      // Устанавливаем пустое сообщение после отправки, так как связь двусторонняя\r\n      this.chatMessage.message = '';\r\n    }\r\n\r\n    // Метод приглашения в игру\r\n    sendInvite(targetId: string) {\r\n      this.store.dispatch(new InviteActions.GameInviteAction(new Invite(this.chatUser.id, targetId)));\r\n    }\r\n\r\n    // Метод отказа\r\n    declineInvite() {\r\n      this.store.dispatch(new InvitingPlayerActions.DeclineInviteAction(this.invitingPlayer));\r\n    }\r\n\r\n    // Метод принятия приглашения\r\n    acceptInvite() {\r\n      this.store.dispatch(new InvitingPlayerActions.AcceptInviteAction(this.invitingPlayer));\r\n    }\r\n\r\n    // Метод хода\r\n    makeMove(cell: number) {\r\n      // Валидация игрока на клиенте, еще одна будет на сервере\r\n      if (this.player != null && this.player.id === this.gameState.currentId) {\r\n        this.store.dispatch(new GameMoveActions.GameMoveSendAction(new GameMove(\r\n          this.gameState.id,\r\n          this.player.id,\r\n          cell\r\n        )));\r\n      }\r\n    }\r\n\r\n    ngOnInit() {\r\n      // Полчуаем пользователя из резолвера и устанавливаем свойства сообщения\r\n      this.user = this.route.snapshot.data.user;\r\n      this.chatMessage.name = this.user.name;\r\n      this.chatMessage.username = this.user.username;\r\n\r\n      // Подключаемся к хабу\r\n      this.store.dispatch(new UserActions.UserHubConnectAction(this.user));\r\n\r\n      // Создаем observable сообщений чата\r\n      this.chatMessages$ = this.store.select('chatMessages');\r\n\r\n      // Подписываемся на модель пользователя чата\r\n      this.chatUserSub = this.store.select('chatUser').subscribe(chatuser => {\r\n        this.chatUser = chatuser;\r\n      });\r\n\r\n      // Создаем observable пользователей чата\r\n      this.chatUsers$ = this.store.select('chatUsers');\r\n\r\n      // Подписываемся на модель игрока, который будет приглашать\r\n      this.invitingPlayerSub = this.store.select('invitingPlayer').subscribe(invitingPlayer => {\r\n        this.invitingPlayer = invitingPlayer;\r\n        this.showModal();\r\n      });\r\n\r\n      // Подписываемся на сообщения сервера\r\n      this.alertMessageSub = this.store.select('alertMessage').subscribe(msg => {\r\n        this.alertMessage = msg;\r\n        this.showAlertModal();\r\n      });\r\n\r\n      // Подписываемся на модель игры\r\n      this.gameStateSub = this.store.select('game').subscribe(game => {\r\n        this.gameState = game;\r\n      });\r\n\r\n      // Подписываемся на модель игрока\r\n      this.playerSub = this.store.select('player').subscribe(player => this.player = player);\r\n\r\n      // Подписываемся на dispatcher для перехвата события получения данных об игроке,\r\n      // чтобы начать игру\r\n      this.isGameSub = this.dispatcher.pipe(filter(action => action.type === PlayerActions.PLAYERRECIEVEDATA))\r\n        .subscribe(() => this.isGame = true);\r\n\r\n      // Подписываемся на dispatcher для перехвата события окончания игры\r\n      this.gameEndedSub = this.dispatcher.pipe(filter(action => action.type === GameActions.GAMEENDED))\r\n        .subscribe(() => {\r\n          this.isGame = false;\r\n          this.store.dispatch(new GameActions.ResetStateAction());\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n      // отписываемся от стора\r\n      this.chatUserSub.unsubscribe();\r\n      this.invitingPlayerSub.unsubscribe();\r\n      this.alertMessageSub.unsubscribe();\r\n      this.playerSub.unsubscribe();\r\n      this.gameStateSub.unsubscribe();\r\n      this.isGameSub.unsubscribe();\r\n      this.gameEndedSub.unsubscribe();\r\n      // отключаемся от хаба\r\n      this.store.dispatch(new UserActions.UserHubDisconnectAction());\r\n      // сбрасываем состояния\r\n      this.store.dispatch(new ChatMessageActions.ResetStateAction());\r\n      this.store.dispatch(new ChatUserActions.ResetStateAction());\r\n      this.store.dispatch(new AlertMessageActions.ResetStateAction());\r\n      this.store.dispatch(new InvitingPlayerActions.ResetStateAction());\r\n      this.store.dispatch(new GameActions.ResetStateAction());\r\n    }\r\n}\r\n","import { User } from '../models/user.model';\r\nimport { AccountService } from '../services/account.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport * as UserActions from '../actions/user.actions';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AccountEffects {\r\n    @Effect()\r\n    update$: Observable<Action> = this.actions$\r\n        .ofType(UserActions.USERUPDATE)\r\n        .pipe(switchMap(() =>\r\n            this.accountService\r\n                .getData()\r\n                .pipe(map(data => new UserActions.UserChangeAction(data)))\r\n        ));\r\n\r\n    @Effect()\r\n    write$: Observable<Action> = this.actions$\r\n        .ofType(UserActions.USERWRITE)\r\n        .pipe(switchMap((action: UserActions.UserWriteAction) => this.accountService.updateData(action.payload)\r\n          .pipe(map(res => new UserActions.UserChangedAction()))\r\n        ));\r\n\r\n    constructor(\r\n        private accountService: AccountService,\r\n        private actions$: Actions\r\n    ) {}\r\n}\r\n","import { User } from '../models/user.model';\r\nimport { SignalRService } from '../services/signalr.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport * as ChatActions from '../actions/chatmessage.actions';\r\nimport * as UserActions from '../actions/user.actions';\r\nimport { map, switchMap, filter, tap } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ChatEffects {\r\n    @Effect()\r\n    send: Observable<Action> = this.actions$\r\n      .ofType(ChatActions.CHATMESSAGESEND)\r\n      .pipe(switchMap((action: ChatActions.ChatMessageSendAction) =>\r\n        this.signalRService.sendMessage(action.payload).pipe(map(() => {\r\n          return new ChatActions.ChatMessageSentAction();\r\n        }))\r\n      ));\r\n\r\n    // @Effect()\r\n    // recieve: Observable<Action> = this.actions$\r\n    //   .ofType(ChatActions.CHATMESSAGERECIEVED)\r\n    //   .pipe(map((action: ChatActions.ChatMessageRecievedAction) =>\r\n    //     new ChatActions.ChatMessagePushAction(action.payload)));\r\n\r\n    @Effect()\r\n    connectToHub: Observable<Action> = this.actions$\r\n      .ofType(UserActions.USERHUBCONNECT)\r\n      .pipe(switchMap((action: UserActions.UserHubConnectAction) =>\r\n        this.signalRService.startConnection(action.payload).pipe(map(() => {\r\n          return new UserActions.UserHubConnectedAction();\r\n        }))\r\n      ));\r\n\r\n    @Effect()\r\n    disconnectFromHub: Observable<Action> = this.actions$\r\n      .ofType(UserActions.USERHUBDISCONNECT)\r\n      .pipe(map(() => {\r\n        this.signalRService.stopConnection();\r\n        return new UserActions.UserHubDisconnectedAction();\r\n      }));\r\n\r\n    @Effect()\r\n    connect: Observable<Action> = this.actions$\r\n      .ofType(UserActions.USERCHATCONNECT)\r\n      .pipe(switchMap((action: UserActions.UserChatConnectAction) =>\r\n        this.signalRService.connect(action.payload).pipe(map(() => {\r\n          return new ChatActions.ChatMessageSentAction();\r\n        }))\r\n      ));\r\n\r\n    constructor(\r\n      private signalRService: SignalRService,\r\n      private actions$: Actions,\r\n    ) {}\r\n}\r\n","import { SignalRService } from '../services/signalr.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { map, switchMap, filter } from 'rxjs/operators';\r\nimport * as InviteActions from '../actions/invite.actions';\r\nimport * as InvitingPlayerActions from '../actions/invitingplayer.action';\r\nimport * as GameMoveActions from '../actions/gamemove.actions';\r\nimport * as GameActions from '../actions/game.actions';\r\n\r\n\r\n@Injectable()\r\nexport class GameEffects {\r\n  @Effect()\r\n  invite: Observable<Action> = this.actions$\r\n  .ofType(InviteActions.GAMEINVITE)\r\n  .pipe(switchMap((action: InviteActions.GameInviteAction) =>\r\n    this.signalRService.inviteUser(action.payload).pipe(map(() => {\r\n      return new InviteActions.GameInvitedAction();\r\n    }))\r\n  ));\r\n\r\n  @Effect()\r\n  declineinvite: Observable<Action> = this.actions$\r\n  .ofType(InvitingPlayerActions.DECLINEINVITE)\r\n  .pipe(switchMap((action: InvitingPlayerActions.DeclineInviteAction) =>\r\n    this.signalRService.declineInvite(action.payload).pipe(map(() => {\r\n      return new InvitingPlayerActions.DeclinedInviteAction();\r\n    }))\r\n  ));\r\n\r\n  @Effect()\r\n  acceptinvite: Observable<Action> = this.actions$\r\n  .ofType(InvitingPlayerActions.ACCEPTINVITE)\r\n  .pipe(switchMap((action: InvitingPlayerActions.AcceptInviteAction) =>\r\n    this.signalRService.acceptInvite(action.payload).pipe(map(() => {\r\n      return new InvitingPlayerActions.AcceptedInviteAction();\r\n    }))\r\n  ));\r\n\r\n  @Effect()\r\n  gameMoveSend: Observable<Action> = this.actions$\r\n  .ofType(GameMoveActions.GAMEMOVESEND)\r\n  .pipe(switchMap((action: GameMoveActions.GameMoveSendAction) =>\r\n    this.signalRService.gameDoMove(action.payload).pipe(map(() => {\r\n      return new GameMoveActions.GameMoveSentAction();\r\n    }))\r\n  ));\r\n\r\n  constructor(\r\n    private signalRService: SignalRService,\r\n    private actions$: Actions,\r\n  ) {}\r\n}\r\n","export class AlertMessage {\r\n  message: string;\r\n\r\n  constructor(message: string = '') {\r\n    this.message = message;\r\n  }\r\n}\r\n","export class ChatMessage {\r\n  name: string;\r\n  username: string;\r\n  message: string;\r\n\r\n  constructor(name: string = '', username: string = '', message: string = '') {\r\n    this.name = name;\r\n    this.username = username;\r\n    this.message = message;\r\n  }\r\n}\r\n","export class ChatUser {\r\n  id: string;\r\n  name: string;\r\n  username: string;\r\n\r\n  constructor(id: string = '', name: string = '', username: string = '') {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.username = username;\r\n  }\r\n}\r\n","export class Game {\r\n  id: number;\r\n  currentId: string;\r\n  currentUsername: string;\r\n  deck: string[];\r\n\r\n  constructor(id: number = 0, currenId: string = '', currentUsername: string = '', deck: string[] = []) {\r\n    this.id = id;\r\n    this.currentId = currenId;\r\n    this.currentUsername = currentUsername;\r\n    this.deck = deck;\r\n  }\r\n}\r\n","export class GameMove {\r\n  gameId: number;\r\n  playerId: string;\r\n  cellIndex: number;\r\n\r\n  constructor(gameId: number, playerId: string, cellIndex: number) {\r\n    this.gameId = gameId;\r\n    this.playerId = playerId;\r\n    this.cellIndex = cellIndex;\r\n  }\r\n}\r\n","export class Invite {\r\n  callerId: string;\r\n  targetId: string;\r\n\r\n  constructor(callerId: string = '', targetId: string = '') {\r\n    this.callerId = callerId;\r\n    this.targetId = targetId;\r\n  }\r\n}\r\n","export class InvitingPlayer {\r\n  id: string;\r\n  username: string;\r\n\r\n  constructor(id: string = '', username: string = '') {\r\n    this.id = id;\r\n    this.username = username;\r\n  }\r\n}\r\n","export class Player {\r\n  id: string;\r\n  username: string;\r\n  pType: string;\r\n\r\n  constructor(id: string = '', username: string = '', pType: string = '') {\r\n    this.id = id;\r\n    this.username = username;\r\n    this.pType = pType;\r\n  }\r\n}\r\n","export class User {\r\n    name: string;\r\n    surname: string;\r\n    age: number;\r\n    username: string;\r\n\r\n    constructor(name: string = '', surname: string = '', age: number = null, username: string = '') {\r\n      this.name = name;\r\n      this.surname = surname;\r\n      this.age = age;\r\n      this.username = username;\r\n    }\r\n}\r\n","import * as AlertMessageActions from '../actions/alretmessage.action';\r\nimport { AlertMessage } from '../models/alertmessage.model';\r\n\r\nexport const initialState: AlertMessage = new AlertMessage();\r\n\r\nexport function reducer(state = initialState, action: AlertMessageActions.Actions) {\r\n    switch (action.type) {\r\n      case AlertMessageActions.ALERTMESSAGESEND:\r\n        return action.payload;\r\n      case AlertMessageActions.RESETSTATE:\r\n        return Object.assign({}, initialState);\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n","import { ChatMessage } from '../models/chatmessage.model';\r\nimport * as chatAction from '../actions/chatmessage.actions';\r\n\r\nexport function reducer(state: ChatMessage, action: chatAction.Actions) {\r\n    switch (action.type) {\r\n      case chatAction.CHATMESSAGERECIEVED:\r\n        return action.payload;\r\n      default:\r\n            return state;\r\n    }\r\n}\r\n","import { ChatMessage } from '../models/chatmessage.model';\r\nimport * as ChatMessageActions from '../actions/chatmessage.actions';\r\n\r\nexport const initialState: ChatMessage[] = [];\r\n\r\nexport function reducer(state = initialState, action: ChatMessageActions.Actions) {\r\n    switch (action.type) {\r\n        case ChatMessageActions.CHATMESSAGESPUSH:\r\n        const messages = state.length ? state : [];\r\n          return [...messages, action.payload];\r\n        case ChatMessageActions.CHATMESSAGESRESETSTATE:\r\n          return Object.assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ChatUser } from '../models/chatuser.model';\r\nimport * as ChatUserActions from '../actions/chatuser.actions';\r\n\r\nexport function reducer(state: ChatUser, action: ChatUserActions.Actions) {\r\n  switch (action.type) {\r\n    case ChatUserActions.CHATUSERSET:\r\n      return action.payload;\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","import { ChatUser } from '../models/chatuser.model';\r\nimport * as ChatUserActions from '../actions/chatuser.actions';\r\n\r\nexport const initialState: ChatUser[] = [];\r\n\r\nexport function reducer(state = initialState, action: ChatUserActions.Actions) {\r\n    switch (action.type) {\r\n        case ChatUserActions.CHATUSERPUSH:\r\n          const users = state.length ? state : [];\r\n          if (!users.some(x => x.id === action.payload.id)) {\r\n            return [...users, action.payload];\r\n          } else {\r\n            return state;\r\n          }\r\n        case ChatUserActions.CHATUSERREMOVE:\r\n          const chatUsers = state.length ? state : [];\r\n          const index = chatUsers.findIndex(x => x.id === action.payload.id);\r\n          if (index > -1) {\r\n            chatUsers.splice(index, 1);\r\n            return chatUsers;\r\n          } else {\r\n            return state;\r\n          }\r\n        case ChatUserActions.RESETSTATE:\r\n          return Object.assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Game } from '../models/game.model';\r\nimport * as GameActions from '../actions/game.actions';\r\n\r\nexport const initialState: Game = new Game();\r\n\r\nexport function reducer(state = initialState, action: GameActions.Actions) {\r\n  switch (action.type) {\r\n    case GameActions.GAMERECIEVESTATE:\r\n      return action.payload;\r\n    case GameActions.RESETSTATE:\r\n      return Object.assign({}, initialState);\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","import { GameMove } from '../models/gamemove.model';\r\nimport * as GameMoveActions from '../actions/gamemove.actions';\r\n\r\nexport function reducer(state: GameMove, action: GameMoveActions.Actions) {\r\n  switch (action.type) {\r\n    case GameMoveActions.GAMEMOVESEND:\r\n        return action.payload;\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","import * as InvitingPlayerActions from '../actions/invitingplayer.action';\r\nimport { InvitingPlayer } from '../models/invitingplayer.model';\r\n\r\nexport const initialState: InvitingPlayer = new InvitingPlayer();\r\n\r\nexport function reducer(state = initialState, action: InvitingPlayerActions.Actions) {\r\n    switch (action.type) {\r\n      case InvitingPlayerActions.RECIEVEINVITE:\r\n        return action.payload;\r\n      case InvitingPlayerActions.DECLINEINVITE:\r\n        return action.payload;\r\n      case InvitingPlayerActions.ACCEPTINVITE:\r\n        return action.payload;\r\n      case InvitingPlayerActions.RESETSTATE:\r\n        return Object.assign({}, initialState);\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n","import { Player } from '../models/player.model';\r\nimport * as PlayerActions from '../actions/player.actions';\r\n\r\nexport function reducer(state: Player, action: PlayerActions.Actions) {\r\n  switch (action.type) {\r\n    case PlayerActions.PLAYERRECIEVEDATA:\r\n        return action.payload;\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","import * as fromUser from './user.reducer';\r\nimport * as fromChat from './chatmessages.reducer';\r\nimport * as fromChatMessage from './chatmessage.reducer';\r\nimport * as fromTitle from './title.reducer';\r\nimport * as fromChatUsers from './chatusers.reducer';\r\nimport * as fromChatUser from './chatuser.reducer';\r\nimport * as fromInvitingPlayer from './invitingplayer.reducer';\r\nimport * as fromAlertMessage from './alertmessage.reducer';\r\nimport * as fromPlayer from './player.reducer';\r\nimport * as fromGame from './game.reducer';\r\nimport * as fromGameMove from './gamemove.reducer';\r\n\r\nexport const reducers = {\r\n    user: fromUser.reducer,\r\n    chatMessages: fromChat.reducer,\r\n    chatMessage: fromChatMessage.reducer,\r\n    title: fromTitle.reducer,\r\n    chatUsers: fromChatUsers.reducer,\r\n    chatUser: fromChatUser.reducer,\r\n    invitingPlayer: fromInvitingPlayer.reducer,\r\n    alertMessage: fromAlertMessage.reducer,\r\n    player: fromPlayer.reducer,\r\n    game: fromGame.reducer,\r\n    gameMove: fromGameMove.reducer,\r\n};\r\n","import * as titleAction from '../actions/title.actions';\r\n\r\nexport function reducer(state: string, action: titleAction.Actions) {\r\n    switch (action.type) {\r\n      case titleAction.TITLEGET:\r\n        return action.payload;\r\n      case titleAction.TITLESET:\r\n        return action.payload;\r\n      default:\r\n            return state;\r\n    }\r\n}\r\n","import { ActionReducer, Action } from '@ngrx/store';\r\nimport { User } from '../models/user.model';\r\nimport * as userAction from '../actions/user.actions';\r\n\r\nexport function reducer(state: User, action: userAction.Actions) {\r\n    switch (action.type) {\r\n        case userAction.USERCHANGE:\r\n            return action.payload;\r\n        case userAction.USERWRITE:\r\n            return action.payload;\r\n        case userAction.USERCHATCONNECT:\r\n            return action.payload;\r\n        case userAction.USERHUBCONNECT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from '../app.state';\r\nimport * as userActions from '../actions/user.actions';\r\nimport { User } from '../models/user.model';\r\nimport { map, filter, take } from 'rxjs/operators';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class UserResolver implements Resolve<Observable<User>> {\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  resolve(): Observable<User> {\r\n    this.store.select('user').subscribe(user => {\r\n      if (!user) {\r\n        this.store.dispatch(new userActions.UserUpdateAction());\r\n      }\r\n    });\r\n    return this.store.select('user').pipe(filter(user => !!user), take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n// const URL = '/mock/account.json';\r\nconst URL = '/Account/Find';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getData(): Observable<User> {\r\n      return this.http.get(URL).pipe(map(\r\n        (data: User) => {\r\n          return new User(data.name, data.surname, data.age, data.username);\r\n        }\r\n      ));\r\n    }\r\n\r\n    updateData(user: User) {\r\n        return this.http.post('/Account/ModifyPlayer', user);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../app.state';\r\nimport * as ChatActions from '../actions/chatmessage.actions';\r\nimport * as UserActions from '../actions/user.actions';\r\nimport * as ChatUserActions from '../actions/chatuser.actions';\r\nimport * as InvitingPlayerActions from '../actions/invitingplayer.action';\r\nimport * as AlertMessageActions from '../actions/alretmessage.action';\r\nimport * as PlayerActions from '../actions/player.actions';\r\nimport * as GameActions from '../actions/game.actions';\r\nimport * as GameMoveActions from '../actions/gamemove.actions';\r\nimport { InvitingPlayer } from '../models/invitingplayer.model';\r\nimport { Player } from '../models/player.model';\r\nimport { Game } from '../models/game.model';\r\nimport { GameMove } from '../models/gamemove.model';\r\nimport { User } from '../models/user.model';\r\nimport { Invite } from '../models/invite.model';\r\nimport { AlertMessage } from '../models/alertmessage.model';\r\nimport { ChatMessage } from '../models/chatmessage.model';\r\nimport { ChatUser } from '../models/chatuser.model';\r\n\r\n\r\ndeclare var $: any;\r\n@Injectable()\r\nexport class SignalRService {\r\n  private connection: any;\r\n  private proxy: any;\r\n  private isConnected: boolean;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n      this.isConnected = false;\r\n      this.createConnection();\r\n      this.registerOnServerEvents();\r\n  }\r\n\r\n  private createConnection() {\r\n      this.connection = $.hubConnection('/signalr');\r\n      this.proxy = this.connection.createHubProxy('XORoomHub');\r\n  }\r\n\r\n  public startConnection(user: User) {\r\n    return this.connection.start().done((data: any) => {\r\n      console.log('Connected to Processing Hub');\r\n      this.store.dispatch(new UserActions.UserChatConnectAction(user));\r\n    }).catch((error: any) => {\r\n        console.log('Hub error -> ' + error);\r\n        setTimeout(() =>\r\n          this.startConnection(user),\r\n          5000);\r\n    });\r\n  }\r\n\r\n  public stopConnection() {\r\n    this.connection.stop();\r\n  }\r\n\r\n  // Регистрация серверных евентов\r\n  public registerOnServerEvents(): void {\r\n        // Здесь связь идет напрямую с AppState, а не через эффекты, потому что если добавить эффекты, то мы получим абсолютно\r\n        // идентичный результат, только с промежуточным action, т.е передадим payload не сразу в стор, а сначала вызовем action,\r\n        // которому передадим payload, который вызовет эффект, который вызовет action,\r\n        // которому передадим копию того же payload, и только потом payload попадет в стор.\r\n        // Я считаю, что здесь не нужно использовать эффекты, но могу ошибаться.\r\n\r\n        this.proxy.on('RecieveChatMessage', (name: string, username: string, message: string) => {\r\n            this.store.dispatch(new ChatActions.ChatMessagePushAction(new ChatMessage(name, username, message)));\r\n        });\r\n\r\n        this.proxy.on('OnConnected', (id: string, name: string, username: string, users: any[] ) => {\r\n          this.store.dispatch(new ChatActions.ChatMessagePushAction(new ChatMessage('CHAT', username, 'Hello ' + username + '!')));\r\n          // устанавливаем только id, остальные поля оставляем пустыми, так как они не понадобятся\r\n          this.store.dispatch(new ChatUserActions.ChatUserSetAction(new ChatUser(id)));\r\n          users.forEach(element => {\r\n            this.store.dispatch(new ChatUserActions.ChatUserPushAction(new ChatUser(element.Id, element.Name, element.Username)));\r\n            console.log(element);\r\n          });\r\n        });\r\n\r\n        this.proxy.on('OnNewUserConnected', (id: string, name: string, username: string) => {\r\n          this.store.dispatch(new ChatActions.ChatMessagePushAction(new ChatMessage('CHAT', username, username + ' connected!')));\r\n          this.store.dispatch(new ChatUserActions.ChatUserPushAction(new ChatUser(id, name, username)));\r\n        });\r\n\r\n        this.proxy.on('OnUserDisconnected', (id: string, name: string, username: string) => {\r\n          console.log(username + ' disconnected recieved');\r\n          this.store.dispatch(new ChatActions.ChatMessagePushAction(new ChatMessage('CHAT', username, username + ' disconnected!')));\r\n          this.store.dispatch(new ChatUserActions.ChatUserRemoveAction(new ChatUser(id, name, username)));\r\n        });\r\n\r\n        this.proxy.on('OnInvite', (callerId: string, callerUsername: string) => {\r\n          console.log(callerUsername + ' invited');\r\n          this.store.dispatch(new InvitingPlayerActions.RecieveInviteAction(new InvitingPlayer(callerId, callerUsername)));\r\n        });\r\n\r\n        this.proxy.on('OnAlert', (message: string) => {\r\n          this.store.dispatch(new AlertMessageActions.AlertMessageSendAction(new AlertMessage(message)));\r\n        });\r\n\r\n        this.proxy.on('ConnectToGame', (id: string, username: string, ptype: string) => {\r\n          this.store.dispatch(new PlayerActions.PlayerRecieveDataAction(new Player(id, username, ptype)));\r\n        });\r\n\r\n        this.proxy.on('OnSetGameState', (gameid: number, cuirrentId: string, currentUsername: string, deck: string[]) => {\r\n          this.store.dispatch(new GameActions.GameRecieveStateAction(new Game(gameid, cuirrentId, currentUsername, deck)));\r\n        });\r\n\r\n        this.proxy.on('OnGameEnded', () => {\r\n          this.store.dispatch(new GameActions.GameEndedAction());\r\n        });\r\n    }\r\n\r\n  // Далее идут методы, вызывающие методы на сервере. Для них уже используются эффекты.\r\n\r\n  // Отправка сообщения в чат\r\n  public sendMessage(message: ChatMessage) {\r\n    return this.proxy.invoke('SendChatMessage', message.name, message.username, message.message)\r\n      .catch((error: any) => {\r\n          console.log('SendChatMessage error -> ' + error);\r\n      });\r\n  }\r\n\r\n  // Приглашение на игру\r\n  public inviteUser(invite: Invite) {\r\n    return this.proxy.invoke('InviteUser', invite.callerId, invite.targetId)\r\n      .catch((error: any) => {\r\n        console.log('Invite error -> ' + error);\r\n      });\r\n  }\r\n\r\n  // Отказ от приглашения\r\n  public declineInvite(invitingPlayer: InvitingPlayer) {\r\n    return this.proxy.invoke('DeclineInvite', invitingPlayer.id)\r\n    .catch((error: any) => {\r\n      console.log('Decline Invite error -> ' + error);\r\n    });\r\n  }\r\n\r\n  // Принятие приглашения\r\n  public acceptInvite(invitingPlayer: InvitingPlayer) {\r\n    return this.proxy.invoke('AcceptInvite', invitingPlayer.id)\r\n    .catch((error: any) => {\r\n      console.log('Accept Invite error -> ' + error);\r\n    });\r\n  }\r\n\r\n  // Ход\r\n  public gameDoMove(gameMove: GameMove) {\r\n    return this.proxy.invoke('RecieveGameState', gameMove.gameId, gameMove.playerId, gameMove.cellIndex)\r\n    .catch((error: any) => {\r\n      console.log('Game Move error -> ' + error);\r\n    });\r\n  }\r\n\r\n  // Подключение к чату\r\n  public connect(user: User) {\r\n    return this.proxy.invoke('Connect', user.name, user.username)\r\n      .done(() => {\r\n        console.log(user.name + ' connection request sent');\r\n      })\r\n      .catch((error: any) => {\r\n          console.log('Connect error -> ' + error);\r\n      });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}